{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template can be used to provision AWS resources required to host a static website and use cloudfront and Route 53 DNS to access the website",
    "Parameters": {
        "BucketName": {
            "Description": "S3 Bucket name",
            "Type": "String"
        },
        "Domain": {
            "Description": "Domain name for website",
            "Type": "String"
        },
        "IndexDocument": {
            "Description": "Index document to be used",
            "Type": "String"
        },
        "ErrorDocument": {
            "Description": "Error document to be used",
            "Type": "String"
        },
        "PriceClass": {
            "Description": "Cloudfront Price class, valid values PriceClass_All, PriceClass_100, PriceClass_200",
            "Type": "String",
            "AllowedValues": [
                "PriceClass_All",
                "PriceClass_100",
                "PriceClass_200"
            ]
        },
        "UserName": {
            "Description": "Build user",
            "Type": "String"
        }
    },
    "Mappings": {
        "Region2S3WebsiteSuffix": {
            "us-east-1"      : { "Suffix": ".s3-website-us-east-1.amazonaws.com" },
            "us-west-1"      : { "Suffix": ".s3-website-us-west-1.amazonaws.com" },
            "us-west-2"      : { "Suffix": ".s3-website-us-west-2.amazonaws.com" },
            "eu-west-1"      : { "Suffix": ".s3-website-eu-west-1.amazonaws.com" },
            "eu-west-2"      : { "Suffix": ".s3-website-eu-west-2.amazonaws.com" },
            "ap-northeast-1" : { "Suffix": ".s3-website-ap-northeast-1.amazonaws.com" },
            "ap-northeast-2" : { "Suffix": ".s3-website-ap-northeast-2.amazonaws.com" },
            "ap-southeast-1" : { "Suffix": ".s3-website-ap-southeast-1.amazonaws.com" },
            "ap-southeast-2" : { "Suffix": ".s3-website-ap-southeast-2.amazonaws.com" },
            "ap-south-1"     : { "Suffix": ".s3-website-ap-south-1.amazonaws.com" },
            "us-east-2"      : { "Suffix": ".s3-website-us-east-2.amazonaws.com" },
            "ca-central-1"   : { "Suffix": ".s3-website-ca-central-1.amazonaws.com" },
            "sa-east-1"      : { "Suffix": ".s3-website-sa-east-1.amazonaws.com" },
            "cn-north-1"     : { "Suffix": ".s3-website.cn-north-1.amazonaws.com.cn" },
            "eu-central-1"   : { "Suffix": ".s3-website-eu-central-1.amazonaws.com" }
        }
    },
    "Resources": {
        "ContentStorage": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Ref": "BucketName"
                },
                "WebsiteConfiguration": {
                    "IndexDocument": { "Ref": "IndexDocument" },
                    "ErrorDocument": { "Ref": "ErrorDocument" }
                },
                "AccessControl": "PublicRead"
            },
            "DeletionPolicy": "Retain"
        },
        "ContentDelivery": {
            "Type" : "AWS::CloudFront::Distribution",
            "Properties": {
                "DistributionConfig" : {
                    "Comment": "CDN for S3-backed website",
                    "Aliases": [{ "Ref": "Domain" }],
                    "Enabled": "true",
                    "DefaultCacheBehavior": {
                        "ForwardedValues": { "QueryString" : "true" },
                        "TargetOriginId": "only-origin",
                        "ViewerProtocolPolicy": "allow-all"
                    },
                    "PriceClass": { "Ref": "PriceClass" },
                    "DefaultRootObject": { "Ref": "IndexDocument" },
	                "Origins" : [
                        { 
                            "CustomOriginConfig": {
                                "HTTPPort" : "80",
                                "HTTPSPort" : "443",
                                "OriginProtocolPolicy" : "http-only"
                            },
                            "DomainName": { 
                                "Fn::Join": ["", [
                                    { "Ref": "ContentStorage" },
                                    { "Fn::FindInMap" : [ 
                                        "Region2S3WebsiteSuffix", { "Ref": "AWS::Region"}, "Suffix" ]}
                                ]]
                            },
                            "Id" : "only-origin"
                        }
                    ]
                }
            },
            "DependsOn": [
                "ContentStorage",
                "Zone"
            ]
        },
        "DnsRecords": {
            "Type" : "AWS::Route53::RecordSetGroup",
            "Properties" : {
                "HostedZoneId" : { "Ref" : "Zone" },
                "Comment" : "DNS Records for hosted zone",
                "RecordSets": [
                    {
                        "Name" : { "Ref": "Domain" },
                        "Type" : "A",
                        "AliasTarget": {
                            "HostedZoneId": { "Ref" : "Zone" },
                            "DNSName": { "Fn::GetAtt": [ "ContentDelivery", "DomainName" ] }
                        }
                    }
                ]

            },
            "DependsOn": [
                "Zone"
            ]
        },
        "Zone": {
            "Type": "AWS::Route53::HostedZone",
            "Properties": {
                "Name": { "Ref": "Domain" },
                "HostedZoneConfig": {
                    "Comment": { "Fn::Join": ["", [
                        "Hosted zone for - ", 
                        { "Ref": "Domain" }
                    ]]}
                }
            }
        },
        "ReadOnlyBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": {"Ref": "BucketName" },
                "PolicyDocument": {
                    "Statement": {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Principal": "*",
                        "Resource": [
                            { "Fn::Join": ["", [
                                "arn:aws:s3:::",
                                { "Ref": "BucketName" },
                                "/*"
                            ]]}
                        ],
                        "Sid": "allowreadonly"
                    }
                }
            },
            "DependsOn": [
                "ContentStorage",
                "ContentDelivery"
            ]
        },
        "BuildUser": {
            "Type" : "AWS::IAM::User",
            "Properties" : {
                "UserName": { "Ref": "UserName" },
                "Policies": [{
                    "PolicyName" : "builduserpolicy",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Action": [
                                    "s3:ListAllMyBuckets"
                                ],
                                "Effect": "Allow",
                                "Resource": "arn:aws:s3:::*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "s3:GetObject",
                                    "s3:PutObject",
                                    "s3:PutObjectAcl",
                                    "s3:ListBucket",
                                    "s3:DeleteObject"
                                ],
                                "Resource": [
                                    {
                                        "Fn::Join": ["", [
                                            "arn:aws:s3:::",
                                            { "Ref": "BucketName" }
                                        ]]
                                    },
                                    {
                                        "Fn::Join": ["", [
                                            "arn:aws:s3:::",
                                            { "Ref": "BucketName" },
                                            "/*"
                                        ]]
                                    }
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudfront:CreateInvalidation",
                                    "cloudfront:GetInvalidation",
                                    "cloudfront:ListInvalidations"
                                ],
                                "Resource": "*"
                            }
                        ]
                    }
                }]
            },
            "DependsOn": [
                "ContentStorage"
            ]
        },
        "BuildUserAccessKey": {
            "Type": "AWS::IAM::AccessKey",
            "Properties" : {
                "UserName" : { "Ref": "UserName" }
            },
            "DependsOn": [
                "BuildUser"
            ]
        }
    },
    "Outputs": {
        "CDNUrl" : {
            "Value": { "Fn::Join" : [ "", ["http://", {"Fn::GetAtt" : ["ContentDelivery", "DomainName"]} ]]},
            "Description": "The URL of the newly created website"
        },
        "S3Url": {
            "Value": { "Fn::GetAtt": ["ContentStorage", "DomainName" ]},
            "Description" : "Name of S3 bucket to hold website content"
        },
        "BuildUserKey": {
            "Value": { "Ref": "BuildUserAccessKey" },
            "Description": "Build user access key id"
        },
        "BuildUserSecretAccessKey": {
            "Value": { "Fn::GetAtt": ["BuildUserAccessKey", "SecretAccessKey" ]},
            "Description": "Build user secret access key"
        }
    }
}